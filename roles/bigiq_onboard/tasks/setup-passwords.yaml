---

- name: Check passwords changed
  uri:
    url: "https://{{ provider.server }}:{{ provider.server_port }}/mgmt/shared/system/setup"
    timeout: "{{ bigiq_onboard_timeout }}"
    validate_certs: "{{ bigiq_onboard_validate_certs }}"
    headers:
      X-F5-Auth-Token: "{{ f5_auth_token }}"
  register: pw

- name: Set new root password
  uri:
    url: "https://{{ provider.server }}:{{ provider.server_port }}/mgmt/shared/authn/root"
    method: POST
    timeout: "{{ bigiq_onboard_timeout }}"
    validate_certs: "{{ bigiq_onboard_validate_certs }}"
    headers:
      X-F5-Auth-Token: "{{ f5_auth_token }}"
    body:
      oldPassword: "{{ bigiq_onboard_old_root_password }}"
      newPassword: "{{ bigiq_onboard_new_root_password }}"
    body_format: json
  when: bigiq_onboard_new_root_password|default(False) and not pw.json.isRootPasswordChanged|bool

- name: Set new admin password
  uri:
    url: "https://{{ provider.server }}:{{ provider.server_port }}/mgmt/shared/authz/users"
    method: PUT
    timeout: "{{ bigiq_onboard_timeout }}"
    validate_certs: "{{ bigiq_onboard_validate_certs }}"
    headers:
      X-F5-Auth-Token: "{{ f5_auth_token }}"
    body:
      name: "admin"
      oldPassword: "{{ bigiq_onboard_old_admin_password }}"
      password: "{{ bigiq_onboard_new_admin_password }}"
      password2: "{{ bigiq_onboard_new_admin_password }}"
    body_format: json
  when: bigiq_onboard_new_admin_password|default(False) and not pw.json.isAdminPasswordChanged|bool

- name: Test authentication - old credentials
  uri:
    url: "https://{{ provider.server }}:{{ provider.server_port }}/mgmt/shared/authn/login"
    method: POST
    timeout: "{{ bigiq_onboard_timeout }}"
    validate_certs: "{{ bigiq_onboard_validate_certs }}"
    body:
      username: "{{ bigiq_onboard_user }}"
      password: "{{ bigiq_onboard_password }}"
    body_format: json
  register: r1
  ignore_errors: true

- name: Test authentication - new credentials
  uri:
    url: "https://{{ provider.server }}:{{ provider.server_port }}/mgmt/shared/authn/login"
    method: POST
    timeout: "{{ bigiq_onboard_timeout }}"
    validate_certs: "{{ bigiq_onboard_validate_certs }}"
    body:
      username: "{{ bigiq_onboard_user }}"
      password: "{{ bigiq_onboard_new_admin_password }}"
    body_format: json
  register: r2
  ignore_errors: true

- name: Set credentials to use for remainder of config
  set_fact:
    bigiq_onboard_credentials_password: "{{ bigiq_onboard_password }}"
  when: r1 is success

- name: Set credentials to use for remainder of config
  set_fact:
    bigiq_onboard_credentials_password: "{{ bigiq_onboard_new_admin_password }}"
  when: r2 is success

- name: Get new authentication token after password change
  uri:
    url: "https://{{ provider.server }}:{{ provider.server_port }}/mgmt/shared/authn/login"
    method: POST
    timeout: "{{ bigiq_onboard_timeout }}"
    validate_certs: "{{ bigiq_onboard_validate_certs }}"
    body:
      username: "{{ bigiq_onboard_user }}"
      password: "{{ bigiq_onboard_credentials_password }}"
    body_format: json
  register: r

- name: Set the token fact if authentication succeeded
  set_fact:
    f5_auth_token: "{{ r.json.token.token }}"
  when: r is success

- name: Mark passwords changed
  uri:
    url: "https://{{ provider.server }}:{{ provider.server_port }}/mgmt/shared/system/setup"
    method: PATCH
    timeout: "{{ bigiq_onboard_timeout }}"
    validate_certs: "{{ bigiq_onboard_validate_certs }}"
    headers:
      X-F5-Auth-Token: "{{ f5_auth_token }}"
    body:
      isRootPasswordChanged: true
      isAdminPasswordChanged: true
    body_format: json
